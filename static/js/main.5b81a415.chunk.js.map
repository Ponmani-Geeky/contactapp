{"version":3,"sources":["Components/Sidebar/Sidebar.js","Components/Context/Usercontext.js","Components/Context/Reduceruser.js","Components/Navbar/Navbar.js","Components/Addcontact/Addcontact.js","Components/Contactinfo/Contactinfo.js","Components/Context/Messagecontext.js","Components/Context/Messagereducer.js","Components/Contactchat/Contactchat.js","Components/Contactlist/Contactlist.js","App.js","index.js"],"names":["Sidebar","Drawer","variant","className","Userlogcontext","React","createContext","initialState","user","actionTypes","SET_User","Reduceruser","state","action","type","SET_USER","users","name","Navbar","useContext","dispatch","useState","showuser","setShowUser","AppBar","position","Toolbar","onClick","map","console","log","handleCurrentUser","Addcontact","placeholder","Contactinfo","currentuser","email","mobile","company","address","initial","slice","toUpperCase","Avatar","Messagecontext","messages","chats","Messagereducer","message","SET_MSG","Contactchat","chatuser","key","dispatched","textMessage","setTextMessage","msg","value","onChange","event","target","tmessage","currentmsg","newmessage","filter","push","sendMessage","usersObj","Contactlist","userinfo","setUserinfo","displaychat","setDisplayChat","display","setDisplay","chatUser","setChatUser","useEffect","userx","handleContact","handleChat","App","Provider","useReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b81a415.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport \"./Sidebar.css\";\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <div>\r\n      <Drawer variant=\"permanent\">\r\n        <PersonOutlineIcon  className='icon'/>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\n\r\nexport const Userlogcontext = React.createContext();\r\n","export const initialState = {\r\n  user: \"ponmani\",\r\n};\r\n\r\nexport const actionTypes = {\r\n  SET_User: \"SET_USER\",\r\n};\r\n\r\nconst Reduceruser = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default Reduceruser;\r\n","import React, { useContext } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport \"./Navbar.css\";\r\nimport { Userlogcontext } from \"../Context/Usercontext\";\r\nimport { actionTypes } from \"../Context/Reduceruser\";\r\n\r\n\r\n\r\nconst users = [{ name: \"ponmani\" }, { name: \"kamal\" }, { name: \"vijay\" }];\r\nfunction Navbar() {\r\n  const [{ user }, dispatch] = useContext(Userlogcontext);\r\n  \r\n\r\n  const [showuser, setShowUser] = React.useState(false);\r\n\r\n  const handleUser = () => {\r\n    setShowUser(!showuser);\r\n  };\r\n\r\n  const handleCurrentUser = (user) => {\r\n    console.log(user);\r\n    // setUser(user);\r\n    dispatch({\r\n      type: actionTypes.SET_USER,\r\n      user: user,\r\n    });\r\n    setShowUser(!showuser);\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <h2 className=\"user\" onClick={handleUser}>\r\n            {user ? user : users[0].name}\r\n          </h2>\r\n          {showuser ? (\r\n            <div className=\"userlist\">\r\n              {users.map((user) => (\r\n                <ul key={user.name}>\r\n                  <li onClick={() => handleCurrentUser(user.name)}>\r\n                    {user.name}\r\n                  </li>\r\n                </ul>\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./Addcontact.css\";\r\nimport PermContactCalendarIcon from \"@material-ui/icons/PermContactCalendar\";\r\n\r\nfunction Addcontact() {\r\n  return (\r\n    <div className=\"contactadd\">\r\n      <div className=\"contacthead\">\r\n        <PermContactCalendarIcon />\r\n        <h2>Contacts</h2>\r\n      </div>\r\n      <div className=\"search\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"contactsearch\"\r\n          placeholder=\"search contact\"\r\n        />\r\n        <button>Add Contact</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Addcontact;\r\n","import React from \"react\";\r\nimport \"./Contactinfo.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nfunction Contactinfo({ currentuser }) {\r\n  const { name, email, mobile, company, address } = currentuser;\r\n   const initial=name.slice(0,1).toUpperCase();\r\n\r\n  return (\r\n    <div className=\"contactinfo\">\r\n      <div className='info_head'>\r\n      <Avatar className='avatar'>{initial}</Avatar>\r\n        <h3>{name}</h3>\r\n      </div>\r\n      <div className=\"userinfo\">\r\n        <div className=\"infodetail left\">\r\n          <p>Fullname:</p>\r\n          <p>Email:</p>\r\n          <p>Mobile:</p>\r\n          <p>Company:</p>\r\n          <p>Place:</p>\r\n        </div>\r\n        <div className=\"infodetail\">\r\n          <p>{name}</p>\r\n          <p>{email}</p>\r\n          <p>{mobile}</p>\r\n          <p>{company}</p>\r\n          <p>{address}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contactinfo;\r\n","import React from \"react\";\r\n\r\nexport const Messagecontext = React.createContext();\r\n","export const initial ={\r\n    messages:[{\r\n      name: \"ponmani\",\r\n      chats: {\r\n        \"kamal\": [\"hello kamall\"],\r\n        \"vijay\": [\"hi vijay\"],\r\n      },\r\n    },\r\n    {\r\n      name: \"kamal\",\r\n      chats: {\r\n        \"ponmani\": [\"hello ponmani\"],\r\n        \"vijay\": [\"hi Vijay \"],\r\n      },\r\n    },\r\n    {\r\n      name: \"vijay\",\r\n      chats: {\r\n        \"ponmani\": [\"hello mani\"],\r\n        \"kamal\": [\"hi kamal\"],\r\n      },\r\n    },\r\n]\r\n}\r\n  \r\n  export const actionTypes = {\r\n    SET_User: \"SET_MSG\",\r\n  };\r\n  \r\n  const Messagereducer = (state, action) => {\r\n      console.log('messageeeeeee',action.message)\r\n    switch (action.type) {\r\n      case actionTypes.SET_MSG:\r\n        return {\r\n          ...state,\r\n          messages:action.message\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default Messagereducer;\r\n  ","import React, { useState, useContext } from \"react\";\r\nimport \"./Contactchat.css\";\r\nimport { Userlogcontext } from \"../Context/Usercontext\";\r\nimport { Messagecontext } from \"../Context/Messagecontext\";\r\nimport { actionTypes } from \"../Context/Messagereducer\";\r\n\r\nconst Contactchat = ({ chatuser }) => {\r\n  let key = 0;\r\n  const [{ user }] = useContext(Userlogcontext);\r\n  const [{ messages }, dispatched] = useContext(Messagecontext);\r\n  const [textMessage, setTextMessage] = useState(\"\");\r\n\r\n  // const [messages, setMessages] = useState([\r\n  //   {\r\n  //     name: \"ponmani\",\r\n  //     chats: {\r\n  //       \"kamal\": [\"hello kamal\"],\r\n  //       \"vijay\": [\"hi vijay\"],\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     name: \"kamal\",\r\n  //     chats: {\r\n  //       \"ponmani\": [\"hello ponmani\"],\r\n  //       \"vijay\": [\"hi Vijay \"],\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     name: \"vijay\",\r\n  //     chats: {\r\n  //       \"ponmani\": [\"hello mani\"],\r\n  //       \"kamal\": [\"hi kamal\"],\r\n  //     },\r\n  //   },\r\n  // ]);\r\n\r\n  const handleChange = (event) => {\r\n    setTextMessage(event.target.value);\r\n  };\r\n\r\n  const sendMessage = (tmessage) => {\r\n    let currentmsg=[...messages];\r\n    if(tmessage){\r\n      let newmessage = [...messages,currentmsg\r\n        .filter((message) => {\r\n          return message.name === chatuser;\r\n        })\r\n        .map((message) => {\r\n          // return message.chats[chatuser].push(tmessage);\r\n          return [{...message.chats[chatuser]},message.chats[user].push(tmessage)];\r\n        })];\r\n      // setMessages([...messages, newmessage]);\r\n      dispatched({\r\n        type: actionTypes.SET_MSG,\r\n        message: newmessage,\r\n      });\r\n      setTextMessage('')\r\n      }\r\n    // if(tmessage){\r\n    // let newmessage = [...messages,currentmsg\r\n    //   .filter((message) => {\r\n    //     return message.name === user;\r\n    //   })\r\n    //   .map((message) => {\r\n    //     // return message.chats[chatuser].push(tmessage);\r\n    //     return [...message.chats[chatuser],message.chats[chatuser].push(tmessage)];\r\n    //   })];\r\n    // // setMessages([...messages, newmessage]);\r\n    // dispatched({\r\n    //   type: actionTypes.SET_MSG,\r\n    //   message: newmessage,\r\n    // });\r\n    // setTextMessage('')\r\n    // }\r\n  };\r\n\r\n  console.log('normalmsg',messages)\r\n\r\n  return (\r\n    <div className=\"userchat\">\r\n      <h2 className=\"chathead\">{chatuser}</h2>\r\n      <div className=\"chatuser\">\r\n      {messages.map((message) => (\r\n        <>\r\n          <div key={key++} className=\"messagess\">\r\n            {\" \"}\r\n            {message.name === user && (\r\n              <div className=\"message\">{message?.chats[chatuser]?.map((msg)=>(<p>{msg}</p>))}</div>\r\n            )}\r\n          </div>\r\n          <div key={key++} className=\"messagess\">\r\n          {\" \"}\r\n          {message.name === chatuser && (\r\n            <div className=\"message\">{message?.chats[user]?.map((msg)=>(<p>{msg}</p>))}</div>\r\n          )}\r\n        </div>\r\n        </>\r\n        ))}\r\n      </div>\r\n      {/* <div className='currentuser'>\r\n      {messages.map((message) => (\r\n          <div key={key++} >\r\n            {\" \"}\r\n            {message.name == chatuser && (\r\n              <div >{message?.chats[user]?.map((msg)=>(<p>{msg}</p>))}</div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div> */}\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Type Message\"\r\n        value={textMessage}\r\n        onChange={handleChange}\r\n      />\r\n      <button className=\"sendbtn\" onClick={() => sendMessage(textMessage)}>\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contactchat;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./Contactlist.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Contactinfo from \"../Contactinfo/Contactinfo\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport Contactchat from \"../Contactchat/Contactchat\";\r\nimport { Userlogcontext } from \"../Context/Usercontext\";\r\n\r\nconst usersObj = [\r\n  {\r\n    name: \"ponmani\",\r\n    email: \"ponmani529@gmail.com\",\r\n    mobile: \"9500244230\",\r\n    company: \"doodleblue\",\r\n    address: \"vellore\",\r\n  },\r\n  {\r\n    name: \"kamal\",\r\n    email: \"kamal345@gmail.com\",\r\n    mobile: \"9522244230\",\r\n    company: \"doodleblue\",\r\n    address: \"chennai\",\r\n  },\r\n  {\r\n    name: \"vijay\",\r\n    email: \"Vijay123@gmail.com\",\r\n    mobile: \"9555244230\",\r\n    company: \"doodleblue\",\r\n    address: \"salem\",\r\n  },\r\n];\r\n\r\nconst Contactlist = () => {\r\n  const [{ user }] = useContext(Userlogcontext);\r\n  const [userinfo, setUserinfo] = useState();\r\n  const [displaychat, setDisplayChat] = useState(false);\r\n  const [display, setDisplay] = useState();\r\n  const [chatUser, setChatUser] = useState();\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    setDisplayChat(false);\r\n    setDisplay(\r\n      usersObj\r\n        .filter((userx) => {\r\n          return userx.name !== user;\r\n        })\r\n        .map((userx) => (\r\n          <div\r\n            key={userx.name}\r\n            className=\"displaycontact\"\r\n            onClick={() => handleContact(userx)}\r\n          >\r\n            <Avatar className='listcontact'>{userx.name.slice(0,1).toUpperCase()}</Avatar>\r\n            <div className=\"basicinfo\">\r\n              <p>\r\n                {userx.name}{\" \"}\r\n                <ChatIcon\r\n                  className=\"chat\"\r\n                  onClick={() => handleChat(userx.name)}\r\n                />\r\n              </p>\r\n              <p>{userx.email}</p>\r\n            </div>\r\n            <p>{userx.company}</p>\r\n          </div>\r\n        ))\r\n    );\r\n  }, [user]);\r\n\r\n  const handleContact = (name) => {\r\n    setUserinfo(name);\r\n  };\r\n\r\n  const handleChat = (name) => {\r\n    setDisplayChat(true);\r\n    setChatUser(name);\r\n  };\r\n\r\n  const handleBack=()=>{\r\n    setDisplayChat(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"contaclist\">\r\n      <div className=\"infohead\">\r\n        <p>Basic Info</p>\r\n        <p>Company</p>\r\n      </div>\r\n      <div className=\"diplayposition\">\r\n        <div>{display}</div>\r\n        {displaychat ? (\r\n          <>\r\n          <button onClick={handleBack} className=\"backbtn\">Back</button>\r\n          <Contactchat chatuser={chatUser} />\r\n          </>\r\n        ) : (\r\n          <div>\r\n            <Contactinfo currentuser={userinfo ? userinfo : usersObj[0]} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contactlist;\r\n","import React, { useReducer } from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./Components/Sidebar/Sidebar\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Addcontact from \"./Components/Addcontact/Addcontact\";\nimport Contactlist from \"./Components/Contactlist/Contactlist\";\nimport { Userlogcontext } from \"./Components/Context/Usercontext\";\nimport { Messagecontext } from \"./Components/Context/Messagecontext\";\nimport { initialState } from \"./Components/Context/Reduceruser\";\nimport Reduceruser from \"./Components/Context/Reduceruser\";\nimport Messagereducer from \"./Components/Context/Messagereducer\";\nimport { initial } from \"./Components/Context/Messagereducer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Userlogcontext.Provider value={useReducer(Reduceruser, initialState)}>\n        <Messagecontext.Provider value={useReducer(Messagereducer, initial)}>\n        <Sidebar />\n        <Navbar />\n        <Addcontact />\n        <Contactlist />\n        </Messagecontext.Provider>\n      </Userlogcontext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}